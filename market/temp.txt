import React, { useState } from "react";

const StoreInventory = () => {
  const [products, setProducts] = useState([]);
  const [newProduct, setNewProduct] = useState({ name: "", price: "", quantity: "", image: "" });
  const [error, setError] = useState("");
  const [editingProduct, setEditingProduct] = useState(null);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setNewProduct({...newProduct, [name]: name === "price" || name === "quantity" ? parseFloat(value) || "" : value,});
    setError(""); // Clear error message when typing
  };
  

  const addProduct = () => {
    if (!newProduct.name || !newProduct.price || !newProduct.quantity) {
      setError("⚠️ Error: All fields except image are required!");
      alert("⚠️ Error: All fields except image are required!");
      return;
    }
    if (editingProduct !== null) {
      setProducts(products.map((product) => 
        product.id === editingProduct ? { ...newProduct, id: editingProduct } : product
      ));
      setEditingProduct(null);
    } else {
      setProducts([...products, { ...newProduct, id: Date.now() }]);
    }
    setNewProduct({ name: "", price: "", quantity: "", image: "" });
    setError(""); // Clear error after successful addition
  };

  const removeProduct = (id) => {
    setProducts(products.filter((product) => product.id !== id));
  };

  const editProduct = (product) => {
    setNewProduct({ name: product.name, price: product.price, quantity: product.quantity, image: product.image });
    setEditingProduct(product.id);
  };

  const cleanForm = () => {
    setNewProduct({name: "", price: "", quantity: "", image: ""});
    setEditingProduct(null);
    setError("");
  };

  return (
    <div style={{ padding: "20px" }}>
      <h2>Store Inventory Management</h2>
      {error && <p style={{ color: "red" }}>{error}</p>}
      <div>
        <input type="text" name="name" placeholder="Product Name" value={newProduct.name} onChange={handleChange} />
        <input type="number" name="price" placeholder="Price" value={newProduct.price} onChange={handleChange} />
        <input type="number" name="quantity" placeholder="Quantity" value={newProduct.quantity} onChange={handleChange} />
        <input type="text" name="image" placeholder="Image URL" value={newProduct.image} onChange={handleChange} />
        <button onClick={addProduct}>{editingProduct !== null ? "Update Product" : "Add Product"}</button>
        {(editingProduct !== null || newProduct.name || parseFloat(newProduct.price) > 0 || parseFloat(newProduct.quantity) > 0 || newProduct.image) && (
  <button onClick={cleanForm} style={{ marginLeft: "10px" }}>Cancel</button>
)}
      </div>
      <ul>
        {products.map((product) => (
          <li key={product.id} style={{ display: "flex", alignItems: "center", marginBottom: "10px" }}>
            <img src={product.image || "https://via.placeholder.com/50"} alt={product.name} style={{ width: "50px", height: "50px", marginRight: "10px" }} />
            {product.name} - ₪{product.price} - {product.quantity} pcs
            <button onClick={() => editProduct(product)} style={{ marginLeft: "10px" }}>Edit</button>
            <button onClick={()  => removeProduct(product.id)} style={{ marginLeft: "10px" }}>Remove</button>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default StoreInventory;
